<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   xmlns:osb="http://www.openswatchbook.org/uri/2009/osb"
   xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   sodipodi:docname="bookSnataIcons.png.svg"
   inkscape:version="1.0 (4035a4fb49, 2020-05-01)"
   id="svg8"
   version="1.1"
   viewBox="0 0 210 297"
   height="297mm"
   width="210mm">
  <defs
     id="defs2">
    <linearGradient
       osb:paint="gradient"
       id="linearGradient8717">
      <stop
         id="stop8713"
         offset="0"
         style="stop-color:#e3e2db;stop-opacity:1;" />
      <stop
         id="stop8715"
         offset="1"
         style="stop-color:#e3e2db;stop-opacity:0;" />
    </linearGradient>
    <inkscape:perspective
       id="perspective8607"
       inkscape:persp3d-origin="-64.897988 : -286.26798 : 1"
       inkscape:vp_z="6.0278577 : -471.68574 : 1"
       inkscape:vp_y="1421.0124 : 6.9450705 : 0"
       inkscape:vp_x="4.8563987 : -100.16264 : 1"
       sodipodi:type="inkscape:persp3d" />
    <linearGradient
       id="linearGradient5603"
       inkscape:collect="always">
      <stop
         id="stop5599"
         offset="0"
         style="stop-color:#ffea1d;stop-opacity:1;" />
      <stop
         id="stop5601"
         offset="1"
         style="stop-color:#ffea1d;stop-opacity:0;" />
    </linearGradient>
    <rect
       id="rect2923"
       height="77.863095"
       width="185.20833"
       y="92.982143"
       x="14.363095" />
    <inkscape:path-effect
       simplify_just_coalesce="false"
       simplify_individual_paths="false"
       helper_size="0"
       smooth_angles="360"
       threshold="0.5"
       steps="1"
       lpeversion="1"
       is_visible="true"
       id="path-effect873"
       effect="simplify" />
    <linearGradient
       osb:paint="gradient"
       id="linearGradient839">
      <stop
         id="stop835"
         offset="0"
         style="stop-color:#4d4d4d;stop-opacity:1;" />
      <stop
         id="stop837"
         offset="1"
         style="stop-color:#4d4d4d;stop-opacity:0;" />
    </linearGradient>
    <linearGradient
       gradientUnits="userSpaceOnUse"
       y2="141.74107"
       x2="182.17262"
       y1="141.74107"
       x1="33.273804"
       id="linearGradient845"
       xlink:href="#linearGradient839"
       inkscape:collect="always" />
    <meshgradient
       gradientTransform="matrix(0.94777562,0,0,1,6.429079,-74.248292)"
       y="88.068451"
       x="7.5595236"
       gradientUnits="userSpaceOnUse"
       id="meshgradient2907"
       inkscape:collect="always">
      <meshrow
         id="meshrow8595">
        <meshpatch
           id="meshpatch8597">
          <stop
             id="stop8599"
             style="stop-color:#ffffff;stop-opacity:1"
             path="c 65.1379,0  130.275,4.84655e-05  195.414,3.72266e-07" />
          <stop
             id="stop8601"
             style="stop-color:#ffe680;stop-opacity:1"
             path="c -0.00527089,41.8294  -11.3435,30.3632  -13.6117,107.345" />
          <stop
             id="stop8603"
             style="stop-color:#ffffff;stop-opacity:1"
             path="c -26.5843,-0.773783  -116.667,18.1255  -181.806,18.1255" />
          <stop
             id="stop8605"
             style="stop-color:#ffe680;stop-opacity:1"
             path="c 0,-41.8294  0,-83.6587  0.004,-125.471" />
        </meshpatch>
      </meshrow>
    </meshgradient>
    <linearGradient
       gradientTransform="matrix(0.94777562,0,0,1,-10.542796,-65.428392)"
       gradientUnits="userSpaceOnUse"
       y2="141.9926"
       x2="220.88026"
       y1="141.9926"
       x1="25.466581"
       id="linearGradient5605"
       xlink:href="#linearGradient5603"
       inkscape:collect="always" />
  </defs>
  <sodipodi:namedview
     inkscape:window-maximized="1"
     inkscape:window-y="-9"
     inkscape:window-x="-9"
     inkscape:window-height="1001"
     inkscape:window-width="1920"
     showgrid="false"
     inkscape:document-rotation="0"
     inkscape:current-layer="layer1"
     inkscape:document-units="mm"
     inkscape:cy="551.53367"
     inkscape:cx="335.844"
     inkscape:zoom="0.7"
     inkscape:pageshadow="2"
     inkscape:pageopacity="0.0"
     borderopacity="1.0"
     bordercolor="#666666"
     pagecolor="#ffffff"
     id="base" />
  <metadata
     id="metadata5">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type
           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
        <dc:title></dc:title>
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <g
     id="layer1"
     inkscape:groupmode="layer"
     inkscape:label="Layer 1">
    <path
       d="M 13.593817,13.820163 H 198.80213 V 139.30826 H 13.593817 Z"
       style="fill:url(#meshgradient2907);fill-opacity:1;stroke:url(#linearGradient5605);stroke-width:0;stroke-linecap:round;stroke-linejoin:bevel;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;paint-order:normal"
       id="rect847" />
    <path
       id="path871"
       d="m 13.593817,13.820153 c 0,41.829375 0,83.658735 0,125.488107"
       style="fill:none;stroke:#000000;stroke-width:1.665;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
    <g
       aria-label="Book Snata"
       id="g8673"
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.1111px;line-height:1.25;font-family:Bahnschrift;-inkscape-font-specification:Bahnschrift;letter-spacing:0px;word-spacing:0px;white-space:pre;shape-inside:url(#rect2923);fill:#000000;fill-opacity:1;stroke:none"
       transform="translate(6.0342873,-74.248302)">
      <path
         d="m 16.430338,104.64751 h 2.714736 q 1.067979,0 1.557183,-0.40652 0.489203,-0.40652 0.489203,-1.14377 v -0.0207 q 0,-0.50987 -0.179145,-0.87505 -0.172254,-0.36518 -0.551215,-0.55811 -0.37896,-0.19981 -0.971517,-0.19981 h -3.059245 v -1.2678 h 3.059245 q 0.778592,0 1.171333,-0.365179 0.399631,-0.36518 0.399631,-1.08176 v 0 q 0,-0.751031 -0.440973,-1.123101 -0.440972,-0.37207 -1.322916,-0.37207 h -2.86632 v -1.302246 h 3.121257 q 0.971517,0 1.626085,0.330729 0.654568,0.330729 0.978407,0.937066 0.323839,0.606336 0.323839,1.44694 v 0 q 0,0.516764 -0.199816,0.971517 -0.199815,0.447864 -0.613227,0.771704 -0.406521,0.31695 -1.012858,0.42719 0.606337,0.0896 1.047309,0.43408 0.440973,0.33762 0.675239,0.84749 0.234267,0.50988 0.234267,1.10243 v 0.0207 q 0,0.81304 -0.35829,1.43316 -0.35829,0.62011 -1.026639,0.95773 -0.668348,0.33762 -1.557183,0.33762 h -3.23839 z m -0.826822,-8.716086 h 1.398708 v 10.018336 h -1.398708 z"
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.1111px;font-family:Bahnschrift;-inkscape-font-specification:Bahnschrift"
         id="path8655" />
      <path
         d="m 27.330621,106.05311 q -0.930176,0 -1.591634,-0.36518 -0.661459,-0.36518 -1.012858,-1.06109 -0.34451,-0.7028 -0.34451,-1.68809 v -1.16444 q 0,-0.97152 0.34451,-1.66054 0.351399,-0.69591 1.012858,-1.0542 0.661458,-0.36518 1.591634,-0.36518 0.930175,0 1.591634,0.36518 0.661458,0.35829 1.005968,1.0542 0.351399,0.68902 0.351399,1.66054 v 1.18511 q 0,0.97841 -0.351399,1.67431 -0.34451,0.68902 -1.005968,1.0542 -0.661459,0.36518 -1.591634,0.36518 z m 0,-1.33669 q 0.73725,0 1.136881,-0.46165 0.406521,-0.46164 0.406521,-1.29535 v -1.18511 q 0,-0.83372 -0.406521,-1.28847 -0.399631,-0.45475 -1.136881,-0.45475 -0.737251,0 -1.143772,0.45475 -0.399631,0.45475 -0.399631,1.28847 v 1.18511 q 0,0.83371 0.399631,1.29535 0.406521,0.46165 1.143772,0.46165 z"
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.1111px;font-family:Bahnschrift;-inkscape-font-specification:Bahnschrift"
         id="path8657" />
      <path
         d="m 35.020073,106.05311 q -0.930176,0 -1.591634,-0.36518 -0.661459,-0.36518 -1.012858,-1.06109 -0.34451,-0.7028 -0.34451,-1.68809 v -1.16444 q 0,-0.97152 0.34451,-1.66054 0.351399,-0.69591 1.012858,-1.0542 0.661458,-0.36518 1.591634,-0.36518 0.930176,0 1.591634,0.36518 0.661458,0.35829 1.005968,1.0542 0.351399,0.68902 0.351399,1.66054 v 1.18511 q 0,0.97841 -0.351399,1.67431 -0.34451,0.68902 -1.005968,1.0542 -0.661458,0.36518 -1.591634,0.36518 z m 0,-1.33669 q 0.73725,0 1.136881,-0.46165 0.406522,-0.46164 0.406522,-1.29535 v -1.18511 q 0,-0.83372 -0.406522,-1.28847 -0.399631,-0.45475 -1.136881,-0.45475 -0.737251,0 -1.143772,0.45475 -0.399631,0.45475 -0.399631,1.28847 v 1.18511 q 0,0.83371 0.399631,1.29535 0.406521,0.46165 1.143772,0.46165 z"
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.1111px;font-family:Bahnschrift;-inkscape-font-specification:Bahnschrift"
         id="path8659" />
      <path
         d="m 40.573567,103.23503 3.679362,-4.437287 h 1.653645 l -5.42258,6.104707 z M 39.96723,95.931424 h 1.405599 V 105.94976 H 39.96723 Z m 2.266873,5.891116 0.902615,-0.93707 3.121256,5.06429 h -1.529622 z"
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.1111px;font-family:Bahnschrift;-inkscape-font-specification:Bahnschrift"
         id="path8661" />
      <path
         d="m 54.388401,106.05311 q -0.72347,0 -1.371148,-0.1378 -0.647678,-0.1378 -1.212673,-0.41341 -0.558106,-0.27561 -1.047309,-0.68902 v 0 l 0.875054,-1.07487 v 0 q 0.571886,0.49609 1.260905,0.74414 0.689019,0.24805 1.495171,0.24805 1.08865,0 1.688097,-0.39963 0.599447,-0.40653 0.599447,-1.14378 v -0.007 q 0,-0.52365 -0.275608,-0.82682 -0.268717,-0.31006 -0.702799,-0.45475 -0.427192,-0.15159 -1.109321,-0.27561 -0.02067,-0.007 -0.04823,-0.007 -0.02067,0 -0.04134,-0.007 l -0.103352,-0.0207 q -1.005968,-0.17225 -1.639866,-0.38585 -0.627007,-0.22049 -1.07487,-0.79237 -0.447862,-0.578779 -0.447862,-1.639868 v -0.0069 q 0,-0.930176 0.413411,-1.584744 0.420302,-0.661458 1.219564,-1.005968 0.799262,-0.344509 1.922363,-0.344509 0.537435,0 1.0542,0.117133 0.523654,0.117133 1.026638,0.3514 0.509874,0.227376 0.999078,0.578776 v 0 l -0.799262,1.116211 v 0 q -0.571886,-0.420302 -1.143772,-0.627008 -0.564996,-0.213596 -1.136882,-0.213596 -1.026638,0 -1.598524,0.413412 -0.564996,0.406521 -0.564996,1.157552 v 0.0069 q 0,0.516764 0.289389,0.813042 0.296278,0.296279 0.73036,0.440973 0.440972,0.137804 1.219563,0.289384 0.02756,0.007 0.04823,0.0138 0.02756,0 0.05512,0.007 0.03445,0.007 0.07579,0.0138 0.04134,0.007 0.07579,0.0138 0.909505,0.18603 1.515842,0.44097 0.613226,0.25493 1.019748,0.82682 0.413411,0.565 0.413411,1.55029 v 0.0138 q 0,0.9164 -0.434082,1.57097 -0.434082,0.64767 -1.260905,0.99218 -0.819932,0.33762 -1.984375,0.33762 z"
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.1111px;font-family:Bahnschrift;-inkscape-font-specification:Bahnschrift"
         id="path8663" />
      <path
         d="m 59.921225,98.797743 h 1.405599 v 7.152017 h -1.405599 z m 4.34082,2.818087 q 0,-0.75792 -0.392741,-1.17133 -0.392741,-0.41341 -1.10243,-0.41341 -0.68902,0 -1.06798,0.36518 -0.37207,0.36518 -0.37207,1.02664 l -0.144694,-1.37804 q 0.330729,-0.647681 0.861274,-0.99908 0.537434,-0.3514 1.185112,-0.3514 1.164443,0 1.79834,0.764811 0.640788,0.757919 0.640788,2.149739 v 4.34082 h -1.405599 z"
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.1111px;font-family:Bahnschrift;-inkscape-font-specification:Bahnschrift"
         id="path8665" />
      <path
         d="m 71.841254,101.41602 q 0,-0.7028 -0.37896,-1.08865 -0.372071,-0.392746 -1.06109,-0.392746 -0.427192,0 -0.840603,0.130916 -0.406521,0.13091 -0.72347,0.36518 l -1.026638,-0.702801 q 0.406521,-0.489204 1.067979,-0.757921 0.668349,-0.275608 1.481391,-0.275608 0.888835,0 1.522732,0.316949 0.633898,0.310058 0.964627,0.909505 0.330729,0.592556 0.330729,1.433156 v 4.59576 h -1.336697 z m -1.750108,4.63709 q -1.322917,0 -1.977485,-0.54432 -0.654568,-0.55122 -0.654568,-1.66743 0,-1.06109 0.599446,-1.59163 0.599447,-0.53055 1.812121,-0.53055 h 2.032606 l 0.09646,1.13 H 69.87755 q -0.551215,0 -0.826823,0.24804 -0.268718,0.24116 -0.268718,0.74414 0,0.54433 0.35829,0.80615 0.365181,0.26183 1.102431,0.26183 0.806152,0 1.198893,-0.17225 0.399631,-0.17226 0.399631,-0.53744 l 0.144694,1.00597 q -0.186035,0.28939 -0.461643,0.47542 -0.268717,0.18604 -0.627007,0.27561 -0.35829,0.0965 -0.806152,0.0965 z"
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.1111px;font-family:Bahnschrift;-inkscape-font-specification:Bahnschrift"
         id="path8667" />
      <path
         d="m 77.18804,105.98421 q -0.868164,0 -1.274685,-0.47542 -0.399631,-0.48231 -0.399631,-1.41938 v -7.372505 h 1.405598 v 7.386285 q 0,0.26183 0.103353,0.40652 0.103353,0.1378 0.303169,0.1378 h 0.675238 v 1.3367 z m -2.411567,-7.186467 h 3.224609 v 1.267797 h -3.224609 z"
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.1111px;font-family:Bahnschrift;-inkscape-font-specification:Bahnschrift"
         id="path8669" />
      <path
         d="m 83.967986,101.41602 q 0,-0.7028 -0.37896,-1.08865 -0.372071,-0.392746 -1.06109,-0.392746 -0.427192,0 -0.840603,0.130916 -0.406521,0.13091 -0.72347,0.36518 l -1.026639,-0.702801 q 0.406522,-0.489204 1.06798,-0.757921 0.668349,-0.275608 1.481391,-0.275608 0.888835,0 1.522732,0.316949 0.633898,0.310058 0.964627,0.909505 0.330729,0.592556 0.330729,1.433156 v 4.59576 h -1.336697 z m -1.750108,4.63709 q -1.322917,0 -1.977485,-0.54432 -0.654568,-0.55122 -0.654568,-1.66743 0,-1.06109 0.599446,-1.59163 0.599447,-0.53055 1.81212,-0.53055 h 2.032607 l 0.09646,1.13 H 82.00428 q -0.551216,0 -0.826823,0.24804 -0.268718,0.24116 -0.268718,0.74414 0,0.54433 0.35829,0.80615 0.36518,0.26183 1.102431,0.26183 0.806152,0 1.198893,-0.17225 0.399631,-0.17226 0.399631,-0.53744 l 0.144694,1.00597 q -0.186035,0.28939 -0.461643,0.47542 -0.268717,0.18604 -0.627007,0.27561 -0.35829,0.0965 -0.806152,0.0965 z"
         style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:14.1111px;font-family:Bahnschrift;-inkscape-font-specification:Bahnschrift"
         id="path8671" />
    </g>
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
